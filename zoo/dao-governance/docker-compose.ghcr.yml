version: '3.8'

services:
  # Infrastructure Services
  anvil:
    image: ghcr.io/foundry-rs/foundry:latest
    entrypoint: ["anvil"]
    command: [
      "--host", "0.0.0.0",
      "--chain-id", "1337",
      "--block-time", "12",
      "--accounts", "10",
      "--balance", "10000"
    ]
    ports:
      - "8546:8545"
    networks:
      - dao-network
    healthcheck:
      test: ["CMD", "cast", "block-number", "--rpc-url", "http://localhost:8545"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: luxdao
      POSTGRES_PASSWORD: luxdao123
      POSTGRES_DB: luxdao
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dao-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U luxdao"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    networks:
      - dao-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application Services
  contracts:
    image: ghcr.io/luxfi/dao-contracts:v1.0.0
    depends_on:
      anvil:
        condition: service_healthy
    environment:
      RPC_URL: http://anvil:8545
      DEPLOYER_PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
    networks:
      - dao-network
    volumes:
      - contracts-artifacts:/app/artifacts
      - contracts-deployments:/app/deployments

  app:
    image: ghcr.io/luxfi/dao-frontend:v1.0.0
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_RPC_URL: http://localhost:8546
      VITE_CHAIN_ID: 1337
    depends_on:
      - contracts
    networks:
      - dao-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  dao-network:
    driver: bridge

volumes:
  postgres-data:
  contracts-artifacts:
  contracts-deployments: